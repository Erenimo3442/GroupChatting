services:
  api:
    build:
      context: .
      dockerfile: WebAPI/Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - .:/src
      - ./uploads:/app/wwwroot/uploads
      # Isolate the container's build folders to prevent conflicts with the host IDE
      - /src/WebAPI/bin
      - /src/WebAPI/obj
      - /src/Application/bin
      - /src/Application/obj
      - /src/Infrastructure/bin
      - /src/Infrastructure/obj
      - /src/Core/bin
      - /src/Core/obj
    working_dir: /src
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - DOTNET_USE_POLLING_FILE_WATCHER=1
      - AppSettings__Token=${JWT_SECRET}
      - ConnectionStrings__DefaultConnection=Host=postgres-db;Database=chatdb;Username=myuser;Password=mypassword
      - ConnectionStrings__Mongo=mongodb://mongoadmin:secret@mongo-db:27017
    depends_on:
      - postgres-db
      - mongo-db
    command: [ "dotnet", "watch", "run", "--project", "WebAPI/WebAPI.csproj", "--urls", "http://+:8080" ]

  # PostgreSQL Database for relational data (Users, Groups)
  postgres-db:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=chatdb

  # MongoDB for unstructured data (Messages)
  mongo-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret

volumes:
  postgres_data:
  mongo_data:
